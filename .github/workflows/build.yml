name: SonarCloud Analysis
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      # Check the project file for errors
      - name: Check project file
        shell: powershell
        run: |
          Get-Content -Path CardCollectionAPI/CardCollectionAPI.csproj
          Write-Host "Checking for PropertyGroup issues..."
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          # Add the skip JRE provisioning parameter to speed up the analysis
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Ortu21_Collectu" /o:"ortu21" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.exclusions="**/obj/**,**/bin/**,**/*.Designer.cs,**/Migrations/**" /d:sonar.scanner.skipJreProvisioning=true /d:sonar.scanner.scanAll=false
          
          # First restore dependencies
          dotnet restore
          
          # Build the solution instead of just the project
          dotnet build Collectu.sln --configuration Release --no-restore
          
          # Run tests if you have them
          dotnet test Collectu.sln --no-restore --verbosity normal --collect:"XPlat Code Coverage" --results-directory:TestResults -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          
          # End SonarCloud analysis
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"