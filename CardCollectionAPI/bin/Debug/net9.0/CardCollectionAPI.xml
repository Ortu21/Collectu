<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CardCollectionAPI</name>
    </assembly>
    <members>
        <member name="T:CardCollectionAPI.Controllers.PokemonCardController">
            <summary>
            Controller per la gestione delle carte Pokémon
            </summary>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PokemonCardController.#ctor(CardCollectionAPI.Services.PokemonCardService)">
            <summary>
            Inizializza una nuova istanza del controller
            </summary>
            <param name="pokemonCardService">Servizio per la gestione delle carte Pokémon</param>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PokemonCardController.ImportPokemonCards">
            <summary>
            Importa tutte le carte Pokémon
            </summary>
            <returns>Messaggio di conferma dell'importazione</returns>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PokemonCardController.ImportSingleCard(System.String)">
            <summary>
            Importa una singola carta Pokémon
            </summary>
            <param name="id">ID della carta da importare</param>
            <returns>Messaggio di conferma dell'importazione</returns>
        </member>
        <member name="T:CardCollectionAPI.Controllers.PublicApiController">
            <summary>
            Controller per le API pubbliche dell'applicazione
            </summary>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PublicApiController.#ctor(CardCollectionAPI.Data.AppDbContext)">
            <summary>
            Controller per le API pubbliche dell'applicazione
            </summary>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PublicApiController.GetCards(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Ottiene un elenco paginato di carte Pokémon con opzioni di filtro e ordinamento
            </summary>
            <param name="page">Numero di pagina (inizia da 1)</param>
            <param name="pageSize">Numero di elementi per pagina</param>
            <param name="search">Testo di ricerca opzionale</param>
            <param name="setId">ID del set per filtrare le carte</param>
            <param name="elasticSearch">Se true, utilizza la ricerca elastica che divide la query in parole chiave</param>
            <param name="sortBy">Campo per l'ordinamento (name, number, rarity, set, hp)</param>
            <param name="sortOrder">Direzione dell'ordinamento (asc, desc)</param>
            <returns>Elenco paginato di carte Pokémon</returns>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PublicApiController.SearchCards(System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Esegue una ricerca avanzata di carte Pokémon utilizzando parole chiave
            </summary>
            <param name="query">Testo di ricerca (obbligatorio)</param>
            <param name="page">Numero di pagina (inizia da 1)</param>
            <param name="pageSize">Numero di elementi per pagina</param>
            <param name="setId">ID del set per filtrare le carte</param>
            <param name="sortBy">Campo per l'ordinamento</param>
            <param name="sortOrder">Direzione dell'ordinamento (asc, desc)</param>
            <returns>Risultati della ricerca paginati con punteggio di rilevanza</returns>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PublicApiController.ApplyDynamicOrdering``1(System.Linq.IQueryable{``0},System.String,System.String)">
            <summary>
            Applica un ordinamento dinamico a una query in base ai parametri specificati
            </summary>
            <typeparam name="T">Tipo di oggetto nella query</typeparam>
            <param name="query">Query da ordinare</param>
            <param name="sortBy">Campo per l'ordinamento</param>
            <param name="sortOrder">Direzione dell'ordinamento (asc, desc)</param>
            <returns>Query ordinata</returns>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PublicApiController.GetCardById(System.String)">
            <summary>
            Ottiene i dettagli completi di una carta Pokémon tramite il suo ID
            </summary>
            <param name="id">ID univoco della carta</param>
            <returns>Dettagli completi della carta, inclusi attacchi, debolezze, resistenze e prezzi</returns>
            <response code="200">Restituisce i dettagli della carta</response>
            <response code="404">Se la carta non viene trovata</response>
        </member>
        <member name="M:CardCollectionAPI.Controllers.PublicApiController.GetSets">
            <summary>
            Ottiene l'elenco di tutti i set Pokémon disponibili
            </summary>
            <returns>Elenco di set Pokémon ordinati per data di rilascio decrescente</returns>
        </member>
        <member name="T:CardCollectionAPI.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:CardCollectionAPI.Migrations.AggiuntaNumeroCard">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.AggiuntaNumeroCard.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.AggiuntaNumeroCard.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.AggiuntaNumeroCard.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:CardCollectionAPI.Migrations.cambioTipoNumberInstringa">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.cambioTipoNumberInstringa.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.cambioTipoNumberInstringa.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:CardCollectionAPI.Migrations.cambioTipoNumberInstringa.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
