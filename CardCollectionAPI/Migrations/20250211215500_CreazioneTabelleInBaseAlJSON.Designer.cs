// <auto-generated />
using CardCollectionAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CardCollectionAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250211215500_CreazioneTabelleInBaseAlJSON")]
    partial class CreazioneTabelleInBaseAlJSON
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonAttack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConvertedEnergyCost")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PokemonCardId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PokemonCardId");

                    b.ToTable("PokemonAttacks");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonCard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("EvolvesFrom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SetId")
                        .HasColumnType("integer");

                    b.Property<string>("Supertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SetId");

                    b.ToTable("PokemonCards");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonPrice", b =>
                {
                    b.Property<string>("PokemonCardId")
                        .HasColumnType("text");

                    b.Property<decimal?>("CardmarketLow")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CardmarketReverseHolo")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CardmarketTrend")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TcgHigh")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TcgLow")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TcgMarket")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TcgMid")
                        .HasColumnType("numeric");

                    b.HasKey("PokemonCardId");

                    b.ToTable("PokemonPrices");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonResistance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PokemonCardId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PokemonCardId");

                    b.ToTable("PokemonResistances");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PokemonSets");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonWeakness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PokemonCardId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PokemonCardId");

                    b.ToTable("PokemonWeaknesses");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonAttack", b =>
                {
                    b.HasOne("CardCollectionAPI.Models.PokemonCard", "PokemonCard")
                        .WithMany("Attacks")
                        .HasForeignKey("PokemonCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokemonCard");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonCard", b =>
                {
                    b.HasOne("CardCollectionAPI.Models.PokemonSet", "Set")
                        .WithMany("Cards")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Set");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonPrice", b =>
                {
                    b.HasOne("CardCollectionAPI.Models.PokemonCard", "PokemonCard")
                        .WithOne("Price")
                        .HasForeignKey("CardCollectionAPI.Models.PokemonPrice", "PokemonCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokemonCard");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonResistance", b =>
                {
                    b.HasOne("CardCollectionAPI.Models.PokemonCard", "PokemonCard")
                        .WithMany("Resistances")
                        .HasForeignKey("PokemonCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokemonCard");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonWeakness", b =>
                {
                    b.HasOne("CardCollectionAPI.Models.PokemonCard", "PokemonCard")
                        .WithMany("Weaknesses")
                        .HasForeignKey("PokemonCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokemonCard");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonCard", b =>
                {
                    b.Navigation("Attacks");

                    b.Navigation("Price");

                    b.Navigation("Resistances");

                    b.Navigation("Weaknesses");
                });

            modelBuilder.Entity("CardCollectionAPI.Models.PokemonSet", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
